name: Javascript

on:
  push:
    branches:
      - "master"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: "package.json"
      - name: Install dependencies
        run: npm ci
      - name: Build bundle
        run: npm run compile
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: "package.json"
      - name: Install dependencies
        run: npm ci
      - name: Check Formatting
        run: npm run fmt:check
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: "package.json"
      - name: Install dependencies
        run: npm ci
      - name: Lint JS
        run: npm run eslint
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: "package.json"
      - name: Install dependencies
        run: npm ci
      - name: Typescript
        run: npm run typecheck
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: "package.json"
      - name: Install dependencies
        run: npm ci
      - name: Run tests ${{ matrix.os }}
        if: runner.os == 'Linux'
        run: xvfb-run -a npm test
      - name: Run tests ${{ matrix.os }}
        if: runner.os != 'Linux'
        run: npm test
